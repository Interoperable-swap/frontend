{
  "source": {
    "hash": "0xe2ce0796a118ec60dcdb365f9cc46864c51d479aa3a13bfcfda1147909f7792a",
    "language": "ink! 3.3.1",
    "compiler": "rustc 1.65.0-nightly"
  },
  "contract": {
    "name": "farming_contract",
    "version": "0.1.0",
    "authors": [
      "Stake Technologies <devops@stake.co.jp>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "arsw_token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "label": "pool_id",
              "type": {
                "displayName": [
                  "farming_external",
                  "DepositInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "farming_external",
                  "DepositInput2"
                ],
                "type": 7
              }
            },
            {
              "label": "to",
              "type": {
                "displayName": [
                  "farming_external",
                  "DepositInput3"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "Farming::deposit",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "farming_external",
              "DepositOutput"
            ],
            "type": 15
          },
          "selector": "0xb9e7b49f"
        },
        {
          "args": [
            {
              "label": "_pool_id",
              "type": {
                "displayName": [
                  "farming_external",
                  "PendingArswInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "_user",
              "type": {
                "displayName": [
                  "farming_external",
                  "PendingArswInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "Farming::pending_arsw",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "farming_external",
              "PendingArswOutput"
            ],
            "type": 20
          },
          "selector": "0x41e73e9d"
        },
        {
          "args": [
            {
              "label": "pool_id",
              "type": {
                "displayName": [
                  "farming_external",
                  "WithdrawInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "amount",
              "type": {
                "displayName": [
                  "farming_external",
                  "WithdrawInput2"
                ],
                "type": 7
              }
            },
            {
              "label": "to",
              "type": {
                "displayName": [
                  "farming_external",
                  "WithdrawInput3"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "Farming::withdraw",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "farming_external",
              "WithdrawOutput"
            ],
            "type": 15
          },
          "selector": "0xebb02f67"
        },
        {
          "args": [
            {
              "label": "alloc_point",
              "type": {
                "displayName": [
                  "farming_external",
                  "AddInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "lp_token",
              "type": {
                "displayName": [
                  "farming_external",
                  "AddInput2"
                ],
                "type": 0
              }
            },
            {
              "label": "rewarder",
              "type": {
                "displayName": [
                  "farming_external",
                  "AddInput3"
                ],
                "type": 21
              }
            }
          ],
          "docs": [],
          "label": "Farming::add",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "farming_external",
              "AddOutput"
            ],
            "type": 15
          },
          "selector": "0x0f5c1645"
        },
        {
          "args": [
            {
              "label": "_pool_id",
              "type": {
                "displayName": [
                  "farming_external",
                  "HarvestInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "_to",
              "type": {
                "displayName": [
                  "farming_external",
                  "HarvestInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "Farming::harvest",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "farming_external",
              "HarvestOutput"
            ],
            "type": 15
          },
          "selector": "0x8f01e560"
        },
        {
          "args": [
            {
              "label": "pool_id",
              "type": {
                "displayName": [
                  "farminggetters_external",
                  "GetUserInfoInput1"
                ],
                "type": 5
              }
            },
            {
              "label": "user",
              "type": {
                "displayName": [
                  "farminggetters_external",
                  "GetUserInfoInput2"
                ],
                "type": 0
              }
            }
          ],
          "docs": [],
          "label": "FarmingGetters::get_user_info",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "farminggetters_external",
              "GetUserInfoOutput"
            ],
            "type": 22
          },
          "selector": "0xa138bb19"
        },
        {
          "args": [
            {
              "label": "pool_id",
              "type": {
                "displayName": [
                  "farminggetters_external",
                  "GetPoolInfosInput1"
                ],
                "type": 5
              }
            }
          ],
          "docs": [],
          "label": "FarmingGetters::get_pool_infos",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "farminggetters_external",
              "GetPoolInfosOutput"
            ],
            "type": 23
          },
          "selector": "0x19e00c18"
        },
        {
          "args": [
            {
              "label": "pool_id",
              "type": {
                "displayName": [
                  "farminggetters_external",
                  "GetLpTokenInput1"
                ],
                "type": 5
              }
            }
          ],
          "docs": [],
          "label": "FarmingGetters::get_lp_token",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "farminggetters_external",
              "GetLpTokenOutput"
            ],
            "type": 21
          },
          "selector": "0x9cf55243"
        },
        {
          "args": [],
          "docs": [],
          "label": "FarmingGetters::pool_length",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "farminggetters_external",
              "PoolLengthOutput"
            ],
            "type": 5
          },
          "selector": "0xa3bfa469"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0x05f79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 0
                      }
                    },
                    "name": "arsw_token"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x06f79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 3
                      }
                    },
                    "name": "user_info"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x07f79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 10
                      }
                    },
                    "name": "pool_info"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x08f79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 5
                      }
                    },
                    "name": "pool_info_length"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x09f79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 12
                      }
                    },
                    "name": "lp_tokens"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x0af79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 13
                      }
                    },
                    "name": "rewarders"
                  },
                  {
                    "layout": {
                      "cell": {
                        "key": "0x0bf79ddf00000000000000000000000000000000000000000000000000000000",
                        "ty": 5
                      }
                    },
                    "name": "total_alloc_point"
                  }
                ]
              }
            },
            "name": "farming"
          },
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0xb36ee29c00000000000000000000000000000000000000000000000000000000",
                        "ty": 0
                      }
                    },
                    "name": "owner"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0xb46ee29c00000000000000000000000000000000000000000000000000000000",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0xb56ee29c00000000000000000000000000000000000000000000000000000000",
                                    "ty": 14
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "_reserved"
                  }
                ]
              }
            },
            "name": "ownable"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 9,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 4
            },
            {
              "name": "V",
              "type": 6
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "tuple": [
              5,
              0
            ]
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "tuple": [
              7,
              8
            ]
          }
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "primitive": "u128"
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "primitive": "i128"
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 9,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 5
            },
            {
              "name": "V",
              "type": 11
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "acc_arsw_per_share",
                  "type": 7,
                  "typeName": "u128"
                },
                {
                  "name": "last_reward_block",
                  "type": 5,
                  "typeName": "u32"
                },
                {
                  "name": "alloc_point",
                  "type": 5,
                  "typeName": "u32"
                }
              ]
            }
          },
          "path": [
            "farming",
            "traits",
            "data",
            "Pool"
          ]
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "sequence": {
              "type": 0
            }
          }
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 9,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 5
            },
            {
              "name": "V",
              "type": 0
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 14
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 16
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 14
            },
            {
              "name": "E",
              "type": 16
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 17,
                      "typeName": "OwnableError"
                    }
                  ],
                  "index": 0,
                  "name": "OwnableError"
                },
                {
                  "fields": [
                    {
                      "type": 18,
                      "typeName": "PSP22Error"
                    }
                  ],
                  "index": 1,
                  "name": "PSP22Error"
                },
                {
                  "index": 2,
                  "name": "DuplicateLPToken"
                },
                {
                  "index": 3,
                  "name": "PoolNotFound1"
                },
                {
                  "index": 4,
                  "name": "PoolNotFound2"
                },
                {
                  "index": 5,
                  "name": "PoolNotFound3"
                },
                {
                  "index": 6,
                  "name": "UserNotFound"
                },
                {
                  "index": 7,
                  "name": "ZeroWithdrawal"
                },
                {
                  "index": 8,
                  "name": "LpTokenNotFound"
                },
                {
                  "index": 9,
                  "name": "LpSupplyIsZero"
                },
                {
                  "index": 10,
                  "name": "BlockNumberLowerThanOriginBlock"
                },
                {
                  "index": 11,
                  "name": "SubUnderflow1"
                },
                {
                  "index": 12,
                  "name": "SubUnderflow2"
                },
                {
                  "index": 13,
                  "name": "AddOverflow1"
                },
                {
                  "index": 14,
                  "name": "AddOverflow2"
                },
                {
                  "index": 15,
                  "name": "AddOverflow3"
                }
              ]
            }
          },
          "path": [
            "farming",
            "traits",
            "farming",
            "FarmingError"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "CallerIsNotOwner"
                },
                {
                  "index": 1,
                  "name": "NewOwnerIsZero"
                }
              ]
            }
          },
          "path": [
            "openbrush_contracts",
            "traits",
            "errors",
            "ownable",
            "OwnableError"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 19,
                      "typeName": "String"
                    }
                  ],
                  "index": 0,
                  "name": "Custom"
                },
                {
                  "index": 1,
                  "name": "InsufficientBalance"
                },
                {
                  "index": 2,
                  "name": "InsufficientAllowance"
                },
                {
                  "index": 3,
                  "name": "ZeroRecipientAddress"
                },
                {
                  "index": 4,
                  "name": "ZeroSenderAddress"
                },
                {
                  "fields": [
                    {
                      "type": 19,
                      "typeName": "String"
                    }
                  ],
                  "index": 5,
                  "name": "SafeTransferCheckFailed"
                }
              ]
            }
          },
          "path": [
            "openbrush_contracts",
            "traits",
            "errors",
            "psp22",
            "PSP22Error"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 7
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 16
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 7
            },
            {
              "name": "E",
              "type": 16
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 0
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 0
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 22,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 6
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 6
            }
          ],
          "path": [
            "Option"
          ]
        }
      },
      {
        "id": 23,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "None"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Some"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 11
            }
          ],
          "path": [
            "Option"
          ]
        }
      }
    ]
  }
}
